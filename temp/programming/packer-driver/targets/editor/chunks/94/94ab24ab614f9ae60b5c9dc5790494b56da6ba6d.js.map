{"version":3,"sources":["file:///Users/vladislavkvinto/StickMan/assets/scripts/GameManager.ts"],"names":["_decorator","Component","Node","input","Input","Prefab","director","instantiate","RigidBody2D","Label","UITransform","v3","Vec3","Tween","AudioSource","AudioClip","ccclass","property","GameManager","isGameStarted","isGrowingBridge","score","currentBridge","currentBridgeHeight","bridgeGrowthSpeed","currentPlatform","nextPlatform","scoreArray","start","playSoundEffect","backgroundMusic","on","EventType","TOUCH_START","onTouchStart","TOUCH_END","onTouchEnd","generateInitialPlatforms","generateBridge","scheduleOnce","setRotationFromEuler","goNextPlatform","currentPlatformTransform","getComponent","nextPlatformTransform","currentPlatformPos","getPosition","nextPlatformPos","currentPlatwormWidth","contentSize","width","nextPlatwormWidth","distanceBetweenPlatforms","Math","abs","x","bridgeActualLength","height","scale","y","playerNewX","playerCurrentY","player","to","position","easing","call","winSound","resetBridge","scoreLabel","string","console","log","moveCamera","generateNextPlatform","push","fallDawn","playerCurrentX","playerX","bridgeFallSound","sortedArray","sort","n1","n2","bestScoreLabel","failureWindow","active","targetX","canvasNode","getScene","getChildByName","cameraNode","uiHolderNode","failureWindowNode","currentPosition","smoothMove","z","smoothMoveUI","failureWindowNodeUI","warn","canvas","children","slice","child","name","removeChild","destroy","setScale","error","newPlatform","platform","setParent","platformWidth","xRandom","random","setPosition","bridge","playerPos","playerHeight","anchorY","rigidBody","addComponent","type","platformInstance","node","addChild","update","deltaTime","restartGame","clearPlatforms","initialPlayerPosition","sound","audioSource","clip","play"],"mappings":"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","sourcesContent":["import {\n    _decorator, Component, Node, input, Input, Prefab, director, instantiate, RigidBody2D, Vec2,\n    Label, UITransform, v3, Vec3, Sprite, Tween, AudioSource, AudioClip\n} from 'cc';\n\nconst {ccclass, property} = _decorator;\n\n@ccclass('GameManager')\nexport class GameManager extends Component {\n\n    @property(Node)\n    player: Node;\n\n    @property(Prefab)\n    platform: Prefab;\n\n    @property(Node)\n    failureWindow: Node;\n\n    @property(Prefab)\n    bridge: Prefab;\n\n    @property(Prefab)\n    point: Prefab;\n\n    @property(Label)\n    scoreLabel: Label;\n\n    @property(Label)\n    bestScoreLabel: Label;\n\n    @property(AudioClip)\n    backgroundMusic: AudioClip;\n\n    @property(AudioClip)\n    bridgeFallSound: AudioClip;\n\n    @property(AudioClip)\n    winSound: AudioClip;\n\n\n    isGameStarted = false;\n    isGrowingBridge = false;\n    score = 0;\n    currentBridge: Node;\n    currentBridgeHeight = 0;\n    bridgeGrowthSpeed = 10;\n\n    currentPlatform: Node;\n    nextPlatform: Node;\n\n    scoreArray = [];\n\n    start() {\n\n        this.playSoundEffect(this.backgroundMusic);\n\n        input.on(Input.EventType.TOUCH_START, this.onTouchStart, this);\n        input.on(Input.EventType.TOUCH_END, this.onTouchEnd, this);\n        this.generateInitialPlatforms();\n\n    }\n\n    onTouchStart() {\n        if (!this.isGameStarted) {\n            this.isGameStarted = true;\n        }\n        this.generateBridge();\n    }\n\n    onTouchEnd() {\n        this.isGrowingBridge = false;\n        if (this.currentBridge) {\n            this.scheduleOnce(() => {\n                this.currentBridge.setRotationFromEuler(0, 0, -90);\n\n                this.scheduleOnce(() => {\n                    this.goNextPlatform();\n                }, 0.5);\n            }, 0.5);\n        }\n    }\n\n\n    private goNextPlatform() {\n\n        const currentPlatformTransform = this.currentPlatform.getComponent(UITransform);\n        const nextPlatformTransform = this.nextPlatform.getComponent(UITransform);\n\n        const currentPlatformPos = this.currentPlatform.getPosition();\n        const nextPlatformPos = this.nextPlatform.getPosition();\n\n        const currentPlatwormWidth = currentPlatformTransform.contentSize.width;\n        const nextPlatwormWidth = nextPlatformTransform.contentSize.width;\n\n        const distanceBetweenPlatforms = Math.abs(nextPlatformPos.x - (currentPlatformPos.x + currentPlatwormWidth));\n        const bridgeActualLength = this.currentBridge.getComponent(UITransform).contentSize.height * this.currentBridge.scale.y;\n\n        if (bridgeActualLength > distanceBetweenPlatforms + 10 && bridgeActualLength < Math.abs(distanceBetweenPlatforms + nextPlatwormWidth)) {\n            const playerNewX = nextPlatformPos.x;\n            const playerCurrentY = this.player.getPosition().y;\n\n            new Tween(this.player)\n                .to(1, {position: new Vec3(playerNewX, playerCurrentY, 0)}, {easing: 'smooth'})\n                .call(() => {\n                    this.playSoundEffect(this.winSound);\n                    this.resetBridge();\n\n                })\n                .start();\n\n            this.score += 1;\n            this.scoreLabel.string = `Score: ${this.score}`;\n            console.log(\"Successful transition to the next platform.\");\n            this.currentPlatform = this.nextPlatform;\n            this.moveCamera(playerNewX + currentPlatwormWidth);\n            this.generateNextPlatform();\n\n        } else {\n            this.scoreArray.push(this.score);\n            this.fallDawn();\n\n        }\n    }\n\n    private fallDawn() {\n        const bridgeActualLength = this.currentBridge.getComponent(UITransform).contentSize.height * this.currentBridge.scale.y;\n        const playerCurrentY = this.player.getPosition().y;\n        const playerCurrentX = this.player.getPosition().x;\n        const playerX = playerCurrentX + bridgeActualLength + this.player.getComponent(UITransform).width;\n        new Tween(this.player)\n            .to(1, {position: new Vec3(playerX, playerCurrentY, 0)}, {easing: 'smooth'})\n            .call(() => {\n                this.playSoundEffect(this.bridgeFallSound);\n                new Tween(this.player)\n                    .to(0.1, {position: new Vec3(playerCurrentX, -1000, 0)}, {easing: 'smooth'})\n                    .start();\n\n                this.currentBridge.setRotationFromEuler(0, 0, -180);\n\n                this.scoreArray.push(this.score);\n                var sortedArray: number[] = this.scoreArray.sort((n1, n2) => n2 - n1);\n\n                this.bestScoreLabel.string = `Best score: ${sortedArray[0]}`;\n                this.failureWindow.active = true;\n            })\n            .start();\n\n    }\n\n\n    private moveCamera(targetX: number) {\n        const canvasNode = director.getScene().getChildByName(\"Canvas\");\n        const cameraNode = canvasNode.getChildByName(\"Camera\");\n        const uiHolderNode = canvasNode.getChildByName(\"UIHolder\");\n        const failureWindowNode = canvasNode.getChildByName(\"FailureWindow\");\n\n        if (canvasNode && cameraNode && uiHolderNode) {\n            const currentPosition = cameraNode.getPosition();\n            const smoothMove = new Tween(cameraNode)\n                .to(1, {position: new Vec3(targetX, currentPosition.y, currentPosition.z)}, {easing: 'smooth'})\n                .start();\n\n            const smoothMoveUI = new Tween(uiHolderNode)\n                .to(1, {position: new Vec3(targetX, uiHolderNode.getPosition().y, uiHolderNode.getPosition().z)}, {easing: 'smooth'})\n                .start();\n\n            const failureWindowNodeUI = new Tween(failureWindowNode)\n                .to(1, {position: new Vec3(targetX, failureWindowNode.getPosition().y, failureWindowNode.getPosition().z)}, {easing: 'smooth'})\n                .start();\n        } else {\n            console.warn(\"Не найдены нужные узлы на сцене!\");\n        }\n    }\n\n\n    private resetBridge() {\n        const canvas = director.getScene().getChildByName(\"Canvas\");\n\n        if (canvas) {\n            let children = canvas.children.slice();\n            for (let child of children) {\n                if (child.name === \"Bridge\") {\n                    canvas.removeChild(child);\n                    child.destroy();\n                    this.currentBridge.setScale(v3(1, 1, 1));\n                    this.currentBridgeHeight = 0;\n                }\n            }\n        } else {\n            console.error(\"Canvas not found in the scene!\");\n        }\n    }\n\n\n    private generateNextPlatform() {\n        const canvas = director.getScene().getChildByName(\"Canvas\");\n        const newPlatform = instantiate(this.platform);\n        newPlatform.setParent(canvas);\n\n        const platformWidth = this.currentPlatform.getComponent(UITransform).contentSize.width;\n        const xRandom = Math.random() * 200 + platformWidth;\n\n        newPlatform.setPosition(this.currentPlatform.getPosition().x + xRandom, -590);\n\n        this.nextPlatform = newPlatform;\n    }\n\n\n    private generateBridge() {\n        this.isGrowingBridge = true;\n        this.currentBridge = instantiate(this.bridge);\n        const canvas = director.getScene().getChildByName(\"Canvas\");\n        this.currentBridge.setParent(canvas);\n\n        const playerPos = this.player.getPosition();\n        const playerHeight = this.player.getComponent(UITransform).height;\n        this.currentBridge.setPosition(playerPos.x + playerHeight * 7 / 9, playerPos.y - playerHeight / 2, 0);\n        this.currentBridge.getComponent(UITransform).anchorY = 0;\n        this.currentBridge.setScale(v3(1, 1, 1));\n\n        const rigidBody = this.currentBridge.getComponent(RigidBody2D) || this.currentBridge.addComponent(RigidBody2D);\n        rigidBody.type = 0;\n    }\n\n    private generateInitialPlatforms() {\n        const canvas = director.getScene().getChildByName(\"Canvas\");\n        const platformInstance: Node = instantiate(this.platform);\n        this.node.addChild(platformInstance);\n\n        this.currentPlatform = instantiate(this.platform);\n        this.currentPlatform.setParent(canvas);\n        this.currentPlatform.setPosition(-350, -590);\n\n        this.generateNextPlatform();\n\n\n    }\n\n    update(deltaTime: number) {\n        if (this.isGrowingBridge && this.currentBridge) {\n            this.currentBridgeHeight += this.bridgeGrowthSpeed * deltaTime;\n            this.currentBridge.setScale(v3(1, this.currentBridgeHeight, 1));\n        }\n    }\n\n    public restartGame() {\n        this.resetBridge();\n        this.score = 0;\n        this.scoreLabel.string = `Score: ${this.score}`;\n\n        this.clearPlatforms();\n\n        this.generateInitialPlatforms();\n\n        const initialPlayerPosition = new Vec3(-350, -340, 0);\n        this.player.setPosition(initialPlayerPosition);\n\n        this.moveCamera(0);\n\n        this.failureWindow.active = false;\n    }\n\n    private clearPlatforms() {\n        const canvas = director.getScene().getChildByName(\"Canvas\");\n        if (canvas) {\n            let children = canvas.children.slice();\n            for (let child of children) {\n                if (child.name === \"Platform\") {\n                    canvas.removeChild(child);\n                    child.destroy();\n                }\n            }\n        } else {\n            console.error(\"Canvas not found in the scene!\");\n        }\n    }\n\n    private playSoundEffect(sound: AudioClip) {\n        const audioSource = this.node.addComponent(AudioSource);\n        audioSource.clip = sound;\n        audioSource.play();\n    }\n\n}\n"]}